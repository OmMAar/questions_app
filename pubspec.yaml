name: question_answer_app
description: A new Flutter application.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter
  flutter_cupertino_localizations: ^1.0.1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  # The following adds the shared pref as a dependency in your application
  shared_preferences: ^2.0.5


  # A Dart package that helps to implement value
  # based equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.2

  # A composable, Future-based library for making HTTP requests.
  http: ^0.13.1

  # Flogs, a powerful logging framework
  #  f_logs: ^1.2.2

  # MobX is a library for reactively managing the state of your applications. Use the power of
  # observables, actions, and reactions to supercharge your Dart and Flutter apps.
  mobx: ^2.0.1
  flutter_mobx: ^2.0.0


  # flutter_bloc is a library for state managing the state of your applications.
  flutter_bloc: ^7.0.1

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  provider: ^5.0.0

  # String validation and sanitization for Dart. Dart 2-compatible version of validator
  validators: ^3.0.0

  # A powerful Http client for Dart
  dio: ^4.0.0
  http_parser: ^4.0.0

  #  Animations Packages

  # Powerful package to create beautiful custom animations in no time.
  simple_animations: ^3.1.1
  flutter_staggered_animations: ^1.0.0
  # Beautiful animations inspired on Animate.css, every animation is a widget that contains default but customizable values that look attractive.
  animate_do: ^2.0.0

  # A flexible widget for user notification. Customize your text, button, duration, animations
  # and much more. For Android devs, it is made to replace Snackbars and Toasts.
  another_flushbar: ^1.10.20

  # Toast Library for Flutter, Easily create toast messages in single line of code
  fluttertoast: ^8.0.7

  # A package provides an easy way to add shimmer effect in Flutter project
  shimmer: ^2.0.0

  # Material Dialog
  material_dialog: ^1.0.0-nullsafety.1



  #A menu button widget to select an item in a dropdown list easily customizable
  menu_button: ^1.4.2+1

  # A carousel slider widget, support infinite scroll and custom child widget.
  carousel_slider: ^4.0.0


  # Customizable animated page indicator with a set of built-in effects.
  smooth_page_indicator: ^1.0.0+2


  # A package to help you build highly customisable timelines with Flutter.
  timeline_tile: ^2.0.0


  # A Flutter implementation of slidable list item
  # with directional slide actions that can be dismissed.
  flutter_slidable: ^0.6.0

  # This package provides internationalization and localization facilities, including message
  # translation, plurals and genders, date/number formatting and parsing, and bidirectional text.
  intl: ^0.17.0

  # XXTEA is a fast and secure encryption algorithm. This is a XXTEA library for Dart.
  xxtea: ^2.1.0

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  sembast: ^3.0.2
  path_provider: ^2.0.1

  # for dependency injection
  injectable: ^1.3.0
  get_it: ^6.1.1


  # for ui
  #  flutter_verification_code: ^1.0.3
  persistent_bottom_nav_bar: ^4.0.2

  # A collection of loading indicators animated with flutter.
  flutter_spinkit: ^5.0.0

  flutter_svg: ^0.22.0
  flutter_icons:
    git:
      url: https://github.com/adarsh-technocrat/flutter-icons

  # A powerful Flutter chart library, currently supporting Line Chart, Bar Chart and Pie Chart.
  fl_chart: ^0.36.3

  #A Flutter widget that can be expanded or collapsed by clicking on a header or an icon.
  expandable: ^5.0.1


  # Easy to use, reliable and lightweight gesture detector for Flutter apps.
  # Exposes simple API to react to basic gestures.
  simple_gesture_detector: ^0.2.0


  #SwipeTo is a wrapper for a chat view widget which
  #can be used initiate callback when user horizontally swipe on it.
  swipe_to: ^0.1.0-nullsafety.1


  # A flutter package which will help you to generate pin code fields.
  # Can be useful for OTP for example.
  pin_code_fields: ^7.3.0


  # A Flutter plugin providing performance optimized signature canvas
  # with ability to set custom style, boundaries and initial state.
  signature: ^4.1.1


  # A modal progress indicator widget
  modal_progress_hud_nsn: ^0.1.0-nullsafety-1




  #Library that allows you to display progress widgets based on percentage, can be Circular or Linear, you can also customize it to your needs.
  percent_indicator: ^3.0.1


  # The google_fonts package for Flutter allows you to easily use any of the 977 fonts
  # (and their variants) from fonts.google.com in your Flutter app.
  google_fonts: ^2.1.0


  # Flutter plugin for selecting images from the Android and iOS image library,
  # and taking new pictures with the camera.
  image_picker: ^0.8.4

  # A date time picker for flutter,
  #you can choose date / time / date&time in English Dutch and Chinese, and you can also custom your own picker content
  flutter_datetime_picker: ^1.5.1

  # a widget provided to the flutter scroll component drop-down refresh and pull up load.
  pull_to_refresh: ^2.0.0

  # Now you can add features to the Android / iOS keyboard in a very simple way.
  #  keyboard_actions: ^3.4.4

  # A highly customizable typeahead (autocomplete) text input field for Flutter
  flutter_typeahead: ^3.2.0

  # A Flutter Sliders library for creating highly customizable and UI-rich slider,
  # range slider, and range selector widgets for filtering purposes.
  syncfusion_flutter_sliders: ^19.2.60
  # The Flutter gauges library includes a linear gauge and radial gauge (a.k.a. circular gauge) to create modern, interactive, animated gauges and radial sliders.
  syncfusion_flutter_gauges: ^19.2.62

  # Flutter plugin for discovering the state of the soft-keyboard visibility on Android and iOS.
  flutter_keyboard_visibility: ^5.0.3


  # A Flutter staggered grid view (masonry tiles) which supports multiple columns with rows of varying sizes
  flutter_staggered_grid_view: ^0.4.0

  # Create awesome and powerful modal bottom sheets.
  # Material, Cupertino iOS 13 or create your own style
  modal_bottom_sheet: ^2.0.0

  # Highly customizable, feature-packed calendar widget for Flutter.
  table_calendar: ^3.0.2



  # Flutter plugin for Google Sign-In,
  # a secure authentication system for signing in with a Google account on Android and iOS.



  # Firebase packages
  #  firebase_core: ^1.0.1
  #  firebase_auth: ^1.0.1
  google_sign_in: ^5.0.5


  #Library for login with LinkedIn OAuth V2 service.
  #This library helps you to implement authorization with LinkedIn OAuth API's.
  linkedin_login: ^2.0.0-dev.4


  #A Flutter OAuth package for performing user authentication against Azure Active Directory OAuth2 v2.0 endpoint.
  aad_oauth: ^0.3.0
  flutter_aad_oauth: ^2.1.2


  #A custom switch widget that can have a custom height and width, borders, border radius,
  #colors, toggle size, custom text and icons inside the toggle.
  flutter_switch: ^0.3.2


  custom_pop_up_menu: ^1.2.2



  #Flutter library to load and cache network images.
  #Can also be used with placeholder and error widgets.
  cached_network_image: ^3.1.0+1


  #
  font_awesome_flutter: ^9.2.0

  # Flutter plugin for launching a URL. Supports web, phone, SMS, and email schemes.
  url_launcher: ^6.0.10

  # Flutter plugin for SQLite, a self-contained, high-reliability, embedded, SQL database engine
  sqflite: ^2.0.0+4



  # ===================== External login ============================
  # Flutter plugin for Google Sign-In,
  # a secure authentication system for signing in with a Google account on Android and iOS.
#  google_sign_in: ^5.1.0


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The following adds the launcher icon support to your application.
  # run below mentioned commands to generate launcher icons
  # flutter packages get
  # flutter packages pub run flutter_launcher_icons:main
  flutter_launcher_icons: ^0.9.0
  json_serializable: ^4.1.3
  mobx_codegen: ^2.0.1+3
  build_runner: ^2.0.5
  analyzer: ^1.5.0
  injectable_generator: ^1.3.0

flutter_icons:
  image_path: "assets/images/app_logo.png"
  android: true
  ios: true


# For information on the generic Dart art of this file, see the
# following page: https://www.dartlang.org/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/images/temp/
    - assets/images/background/
    - assets/images/general/
    - assets/icons/
    - assets/icons/svg/
    - assets/icons/background/
    - assets/lang/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.io/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.io/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: ProductSans
      fonts:
        - asset: assets/fonts/Product-Sans-Regular.ttf
        - asset: assets/fonts/Product-Sans-Italic.ttf
          style: italic
        - asset: assets/fonts/Product-Sans-Bold.ttf
          weight: 700

  # For details regarding fonts from package dependencies,
  # see https://flutter.io/custom-fonts/#from-packages
